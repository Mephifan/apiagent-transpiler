/**
 * Autogenerated file
 * Create time {{now | toString | noescape}}
 * Copyright (c) 2019 Adcubum AG
 *
 */
import {PolymerElement} from '@polymer/polymer/polymer-element.js';
import {ApiService} from './apiService.js'

/**
 * {{ range $key, $service := .services }} `{{$service.name}}` Collection{{end}}
 */

/**
 * {{.description}}
 */

/**
 * package: {{.package}}
 * version: {{.major_version}}
 */

/**
 * @customElement
 * @polymer
 * @extends PolymerElement
 * @appliesMixin ApiService
 * @demo demo/index.html
 */
class {{ range $key, $service := .services }}{{$service.name}}{{end}}List extends ApiService(PolymerElement) {

    static get properties() {
        return {
            /**
             * Collection Model
             * Array of entities
             */
            list: {
                type: Array,
            },
            /**
             * Hypermedia As The Engine Of Application State (HATEOAS)
             * Array of HATEOAS links
             * z.B. next, first, last page
             */
            hateoas: Array,
        };
    }

    {{ range $key, $service := .services }}{{ range $key, $method := $service.methods}}{{if contains "List" $method.name }}
    /**
     *  ```
     *  rpc {{$method.name}} ({{$method.input_type}}) returns ({{$method.output_type}}) {{"{"}}{{if $method.options}}{{ range $key, $option := $method.options }}
     *      option ({{$option.name}}) = {{"{"}}{{range $key, $var := $option.vars }}
     *          {{$var.key}}: "{{$var.value}}"{{end}}
     *      {{"}"}};{{end}}{{end}}
     *  {{"}"}}
     *  ```
     * @public
     */
    {{$length := len $method.name }}{{substr 0 1 $method.name | lower}}{{substr 1 $length $method.name}}() { {{if $method.options}}{{range $key, $options := $method.options }}{{range $key, $var := $options.vars}}
        const getRequest = new Request('{{$var.value}}', {method: '{{$var.key | upper}}', headers: {}});
        this.generateRequest(getRequest);
        {{end}}{{end}}{{end}}
    }{{end}}{{end}}{{end}}


    /**
     * Follows Hateoas rel=prev
     */
    prevPage() {
        const follow = 'prev';
        let rel = this.hateoas.find(obj => {
            return follow === obj.rel
        });
        this.followRel(rel);
    }

    /**
     * Follows Hateoas rel=next
     */
    nextPage() {
        const follow = 'next';
        let rel = this.hateoas.find(obj => {
            return follow === obj.rel
        });
        this.followRel(rel);
    }

    /**
     * Follows Hateoas rel=first
     */
    firstPage() {
        const follow = 'first';
        let rel = this.hateoas.find(obj => {
            return follow === obj.rel
        });
        this.followRel(rel);
    }

    /**
     * Follows Hateoas rel=last
     */
    lastPage() {
        const follow = 'last';
        let rel = this.hateoas.find(obj => {
            return follow === obj.rel
        });
        this.followRel(rel);
    }
}

window.customElements.define('{{ range $key, $service := .services }}{{$service.name | snakecase | replace "_" "-" | camelcase | lower}}-list{{end}}', {{ range $key, $service := .services }}{{$service.name}}List{{end}});
